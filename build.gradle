buildscript {
    ext{
        springBootVersion = '2.6.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

subprojects {
    //공통 세팅
    configurations {
        all{
            exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
            exclude module: "logback-classic"
        }
    }

    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'org.bluebug'
    version '1.0-SNAPSHOT'

    sourceCompatibility = '11'
    targetCompatibility = '11'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'

        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        //기존 log4j 제거
        implementation 'org.springframework.boot:spring-boot-starter-validation' exclude module: 'spring-boot-starter-logging'

        //log4j 업데이트
        implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
        implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
        implementation group: 'org.apache.logging.log4j', name: 'log4j-jul', version: '2.17.1'
        implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.1'
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'
        implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.32'
    }

    test {
        useJUnitPlatform()
    }
}

project(':domains:member_domain'){
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
    }
}

project(':domains:token_domain'){
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
    }
}

project(':domains:post_domain'){
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
    }
}

project(':gamehub_core'){
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        api project(':domains:token_domain')
        api project(':domains:member_domain')
    }
}


project('apis:gamehub_auth_api'){
    dependencies {
        implementation project(':gamehub_core')
    }
}

project('apis:gamehub_s3_api'){
    dependencies {
        implementation project(':gamehub_core')
        implementation project(':domains:post_domain')
    }
}

project('apis:gamehub_post_api'){
    dependencies {
        implementation project(':gamehub_core')
        implementation project(':domains:post_domain')
    }
}